"use strict";(self.webpackChunktodolist_app=self.webpackChunktodolist_app||[]).push([[739],{"./src/stories/AppWithCustomHooks.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppWithReduxBaseExample:()=>AppWithReduxBaseExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AppWithCustomHooks_stories});var react=__webpack_require__("./node_modules/react/index.js"),AddItemForm=(__webpack_require__("./src/App.css"),__webpack_require__("./src/components/AddItemForm/AddItemForm.tsx")),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const EditableSpan=react.memo((props=>{console.log("EditableSpan is called");const[editMode,setEditMode]=(0,react.useState)(!1),[value,setValue]=(0,react.useState)(props.title);return editMode?(0,jsx_runtime.jsxs)("div",{className:"add-task-wrapper",children:[(0,jsx_runtime.jsx)(TextField.Z,{autoFocus:!0,value,onChange:e=>{setValue(e.currentTarget.value)}}),(0,jsx_runtime.jsx)(Button.Z,{onClick:()=>{props.saveEdit(value),setEditMode(!1)},variant:"outlined",children:"save"})]}):(0,jsx_runtime.jsx)("span",{onDoubleClick:()=>{setEditMode(!0),setValue(props.title)},children:props.title})}));try{EditableSpan.displayName="EditableSpan",EditableSpan.__docgenInfo={description:"",displayName:"EditableSpan",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},saveEdit:{defaultValue:null,description:"",name:"saveEdit",required:!0,type:{name:"(newText: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AppWithCustomHooks/EditableSpan.tsx#EditableSpan"]={docgenInfo:EditableSpan.__docgenInfo,name:"EditableSpan",path:"src/components/AppWithCustomHooks/EditableSpan.tsx#EditableSpan"})}catch(__react_docgen_typescript_loader_error){}var Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Delete=__webpack_require__("./node_modules/@mui/icons-material/Delete.js");const Task=react.memo((props=>{const saveEditContainer=(0,react.useCallback)((newText=>{props.changeTaskTitle(newText,props.toDoListId,props.task.id)}),[props]);return(0,jsx_runtime.jsxs)("li",{className:props.task.isDone?"is-done":"",children:[(0,jsx_runtime.jsx)(Checkbox.Z,{checked:props.task.isDone,onChange:e=>{props.changeStatus(props.task.id,e.currentTarget.checked,props.toDoListId)}}),(0,jsx_runtime.jsx)(EditableSpan,{title:props.task.title,saveEdit:saveEditContainer}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:()=>{props.removeTask(props.task.id,props.toDoListId)},"aria-label":"delete",size:"small",children:(0,jsx_runtime.jsx)(Delete.Z,{fontSize:"small"})})]},props.task.id)}));try{Task.displayName="Task",Task.__docgenInfo={description:"",displayName:"Task",props:{removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(id: string, todolistId: string) => void"}},changeStatus:{defaultValue:null,description:"",name:"changeStatus",required:!0,type:{name:"(id: string, isDone: boolean, todolistId: string) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string, taskId: string) => void"}},toDoListId:{defaultValue:null,description:"",name:"toDoListId",required:!0,type:{name:"string"}},task:{defaultValue:null,description:"",name:"task",required:!0,type:{name:"TaskType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AppWithCustomHooks/Task.tsx#Task"]={docgenInfo:Task.__docgenInfo,name:"Task",path:"src/components/AppWithCustomHooks/Task.tsx#Task"})}catch(__react_docgen_typescript_loader_error){}const Todolist=react.memo((function(props){const{title,tasks,filter,id,removeTask,changeFilter,addTask,changeStatus,removeTodolist,changeTaskTitle,changeTodoListTitle}=props;console.log("TodoList is called");const onAllClickHandler=(0,react.useCallback)((()=>changeFilter("all",id)),[changeFilter,id]),onActivecliCkHandler=(0,react.useCallback)((()=>changeFilter("active",id)),[changeFilter,id]),onCompletedClickHandler=(0,react.useCallback)((()=>changeFilter("completed",id)),[changeFilter,id]),onRemoveTodolist=(0,react.useCallback)((()=>removeTodolist(id)),[removeTodolist,id]),addTaskContainer=(0,react.useCallback)((title=>{addTask(title,id)}),[addTask,id]);let tasksForTodolist=tasks;return"completed"===filter&&(tasksForTodolist=tasks.filter((task=>task.isDone))),"active"===filter&&(tasksForTodolist=tasks.filter((task=>!task.isDone))),"all"===filter&&(tasksForTodolist=tasks),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("h3",{children:[(0,jsx_runtime.jsx)(EditableSpan,{title,saveEdit:newTitle=>{changeTodoListTitle(newTitle,id)}}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:onRemoveTodolist,children:(0,jsx_runtime.jsx)(Delete.Z,{})})]}),(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTaskContainer}),(0,jsx_runtime.jsx)("ul",{children:tasksForTodolist.map((task=>(0,jsx_runtime.jsx)(Task,{toDoListId:id,task,removeTask,changeStatus,changeTaskTitle},task.id)))}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button.Z,{variant:"all"===filter?"contained":"text",onClick:onAllClickHandler,children:"All"}),(0,jsx_runtime.jsx)(Button.Z,{variant:"active"===filter?"contained":"text",onClick:onActivecliCkHandler,children:"Aсtive"}),(0,jsx_runtime.jsx)(Button.Z,{variant:"completed"===filter?"contained":"text",onClick:onCompletedClickHandler,children:"Completed"})]})]})}));try{Todolist.displayName="Todolist",Todolist.__docgenInfo={description:"",displayName:"Todolist",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},tasks:{defaultValue:null,description:"",name:"tasks",required:!0,type:{name:"TaskType[]"}},filter:{defaultValue:null,description:"",name:"filter",required:!0,type:{name:"enum",value:[{value:'"all"'},{value:'"completed"'},{value:'"active"'}]}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(id: string, todolistId: string) => void"}},changeFilter:{defaultValue:null,description:"",name:"changeFilter",required:!0,type:{name:"(value: FilterValuesType, todolistId: string) => void"}},addTask:{defaultValue:null,description:"",name:"addTask",required:!0,type:{name:"(taskText: string, todolistId: string) => void"}},changeStatus:{defaultValue:null,description:"",name:"changeStatus",required:!0,type:{name:"(id: string, isDone: boolean, todolistId: string) => void"}},removeTodolist:{defaultValue:null,description:"",name:"removeTodolist",required:!0,type:{name:"(id: string) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string, taskId: string) => void"}},changeTodoListTitle:{defaultValue:null,description:"",name:"changeTodoListTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AppWithCustomHooks/Todolist.tsx#Todolist"]={docgenInfo:Todolist.__docgenInfo,name:"Todolist",path:"src/components/AppWithCustomHooks/Todolist.tsx#Todolist"})}catch(__react_docgen_typescript_loader_error){}var Menu=__webpack_require__("./node_modules/@mui/icons-material/Menu.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),AppBar=__webpack_require__("./node_modules/@mui/material/AppBar/AppBar.js"),Toolbar=__webpack_require__("./node_modules/@mui/material/Toolbar/Toolbar.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),Container=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),Grid=__webpack_require__("./node_modules/@mui/material/Grid/Grid.js"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),rng=__webpack_require__("./node_modules/uuid/dist/esm-browser/rng.js"),stringify=__webpack_require__("./node_modules/uuid/dist/esm-browser/stringify.js");let _nodeId,_clockseq,_lastMSecs=0,_lastNSecs=0;const esm_browser_v1=function v1(options,buf,offset){let i=buf&&offset||0;const b=buf||new Array(16);let node=(options=options||{}).node||_nodeId,clockseq=void 0!==options.clockseq?options.clockseq:_clockseq;if(null==node||null==clockseq){const seedBytes=options.random||(options.rng||rng.Z)();null==node&&(node=_nodeId=[1|seedBytes[0],seedBytes[1],seedBytes[2],seedBytes[3],seedBytes[4],seedBytes[5]]),null==clockseq&&(clockseq=_clockseq=16383&(seedBytes[6]<<8|seedBytes[7]))}let msecs=void 0!==options.msecs?options.msecs:Date.now(),nsecs=void 0!==options.nsecs?options.nsecs:_lastNSecs+1;const dt=msecs-_lastMSecs+(nsecs-_lastNSecs)/1e4;if(dt<0&&void 0===options.clockseq&&(clockseq=clockseq+1&16383),(dt<0||msecs>_lastMSecs)&&void 0===options.nsecs&&(nsecs=0),nsecs>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");_lastMSecs=msecs,_lastNSecs=nsecs,_clockseq=clockseq,msecs+=122192928e5;const tl=(1e4*(268435455&msecs)+nsecs)%4294967296;b[i++]=tl>>>24&255,b[i++]=tl>>>16&255,b[i++]=tl>>>8&255,b[i++]=255&tl;const tmh=msecs/4294967296*1e4&268435455;b[i++]=tmh>>>8&255,b[i++]=255&tmh,b[i++]=tmh>>>24&15|16,b[i++]=tmh>>>16&255,b[i++]=clockseq>>>8|128,b[i++]=255&clockseq;for(let n=0;n<6;++n)b[i+n]=node[n];return buf||(0,stringify.S)(b)};let todolistId1=esm_browser_v1(),todolistId2=esm_browser_v1();function AppWithCustomHooks(){const{tasksObj,changeStatus,changeTaskTitle,addTask,removeTask,completeRemoveTasksForTodolist,addStateForNewTodolist}=function useTasks(){let[tasksObj,setTasks]=(0,react.useState)({[todolistId1]:[{id:esm_browser_v1(),title:"CSS",isDone:!0},{id:esm_browser_v1(),title:"JS",isDone:!0},{id:esm_browser_v1(),title:"React",isDone:!1},{id:esm_browser_v1(),title:"Redux",isDone:!1}],[todolistId2]:[{id:esm_browser_v1(),title:"Book",isDone:!0},{id:esm_browser_v1(),title:"Milk",isDone:!0},{id:esm_browser_v1(),title:"Beer",isDone:!1}]});return{tasksObj,setTasks,changeStatus:(id,isDone,todolistId)=>{let task=tasksObj[todolistId].find((task=>task.id===id));task&&(task.isDone=isDone,setTasks({...tasksObj}))},changeTaskTitle:(newTitle,toDoListId,taskId)=>{let task=tasksObj[toDoListId].find((e=>e.id===taskId));task&&(task.title=newTitle,setTasks({...tasksObj}))},addTask:(taskText,todolistId)=>{let newTasks=[{id:esm_browser_v1(),title:taskText,isDone:!1},...tasksObj[todolistId]];tasksObj[todolistId]=newTasks,setTasks({...tasksObj})},removeTask:(id,todolistId)=>{let tasks=tasksObj[todolistId];tasksObj[todolistId]=tasks.filter((task=>task.id!==id)),setTasks({...tasksObj})},completeRemoveTasksForTodolist:id=>{delete tasksObj[id],setTasks({...tasksObj})},addStateForNewTodolist:newTodoListId=>{setTasks({...tasksObj,[newTodoListId]:[]})}}}(),{todolists,changeFilter,removeTodoList,changeTodoListTitle,addTodoList}=function useTodolists(onTodoListRemove,onTodoListAdded){let[todolists,setTodolists]=(0,react.useState)([{id:todolistId1,title:"What to learn",filter:"all"},{id:todolistId2,title:"What to buy",filter:"all"}]);return{todolists,changeFilter:(value,todolistId)=>{let todolist=todolists.find((tl=>tl.id===todolistId));todolist&&(todolist.filter=value,setTodolists([...todolists]))},removeTodoList:todolistId=>{let filteredTodoList=todolists.filter((tl=>tl.id!==todolistId));setTodolists([...filteredTodoList]),onTodoListRemove(todolistId)},changeTodoListTitle:(newTitle,toDoListId)=>{let todolist=todolists.find((e=>e.id===toDoListId));todolist&&(todolist.title=newTitle,setTodolists([...todolists]))},addTodoList:title=>{const newTodoList={id:esm_browser_v1(),title,filter:"all"};setTodolists([newTodoList,...todolists]),onTodoListAdded(newTodoList.id)}}}(completeRemoveTasksForTodolist,addStateForNewTodolist);return(0,jsx_runtime.jsxs)("div",{className:"App",children:[(0,jsx_runtime.jsx)(Box.Z,{sx:{flexGrow:1},children:(0,jsx_runtime.jsx)(AppBar.Z,{position:"static",children:(0,jsx_runtime.jsxs)(Toolbar.Z,{children:[(0,jsx_runtime.jsx)(IconButton.Z,{size:"large",edge:"start",color:"inherit","aria-label":"menu",sx:{mr:2},children:(0,jsx_runtime.jsx)(Menu.Z,{})}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"h6",component:"div",sx:{flexGrow:1},children:"News"}),(0,jsx_runtime.jsx)(Button.Z,{color:"inherit",children:"Login"})]})})}),(0,jsx_runtime.jsxs)(Container.Z,{fixed:!0,children:[(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,style:{padding:"2rem"},children:(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTodoList})}),(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,spacing:3,children:todolists.map((tl=>{let tasksForTodolist=tasksObj[tl.id];return"completed"===tl.filter&&(tasksForTodolist=tasksForTodolist.filter((task=>task.isDone))),"active"===tl.filter&&(tasksForTodolist=tasksForTodolist.filter((task=>!task.isDone))),"all"===tl.filter&&(tasksForTodolist=tasksObj[tl.id]),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(Paper.Z,{style:{padding:"1rem"},children:(0,jsx_runtime.jsx)(Todolist,{id:tl.id,title:tl.title,tasks:tasksForTodolist,filter:tl.filter,removeTask,addTask,changeFilter,changeStatus,removeTodolist:removeTodoList,changeTaskTitle,changeTodoListTitle})})},tl.id)}))})]})]})}var _AppWithReduxBaseExam,_AppWithReduxBaseExam2,_AppWithReduxBaseExam3;const AppWithCustomHooks_stories={parameters:{storySource:{source:"import { AppWithCustomHooks } from '../components/AppWithCustomHooks';\n// import { ReduxStoreProviderDecorator } from './ReduxStoreProviderDecorator'\nexport default {\n  title: 'AppWithCustomHooks Component',\n  component: AppWithCustomHooks\n  // decorators: [ReduxStoreProviderDecorator]\n};\n\nexport const AppWithReduxBaseExample = () => {\n  return <>\r\n      <AppWithCustomHooks />\r\n    </>;\n};\nAppWithReduxBaseExample.parameters = {\n  ...AppWithReduxBaseExample.parameters,\n  docs: {\n    ...AppWithReduxBaseExample.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <>\\r\\n      <AppWithCustomHooks />\\r\\n    </>;\\n}\",\n      ...AppWithReduxBaseExample.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{"app-with-redux-base-example":{startLoc:{col:39,line:9},endLoc:{col:1,line:13},startBody:{col:39,line:9},endBody:{col:1,line:13}}}}},title:"AppWithCustomHooks Component",component:AppWithCustomHooks},AppWithReduxBaseExample=()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(AppWithCustomHooks,{})});AppWithReduxBaseExample.parameters={...AppWithReduxBaseExample.parameters,docs:{...null===(_AppWithReduxBaseExam=AppWithReduxBaseExample.parameters)||void 0===_AppWithReduxBaseExam?void 0:_AppWithReduxBaseExam.docs,source:{originalSource:"() => {\n  return <>\r\n      <AppWithCustomHooks />\r\n    </>;\n}",...null===(_AppWithReduxBaseExam2=AppWithReduxBaseExample.parameters)||void 0===_AppWithReduxBaseExam2||null===(_AppWithReduxBaseExam3=_AppWithReduxBaseExam2.docs)||void 0===_AppWithReduxBaseExam3?void 0:_AppWithReduxBaseExam3.source}}};const __namedExportsOrder=["AppWithReduxBaseExample"]},"./src/components/AddItemForm/AddItemForm.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>AddItemForm});var react=__webpack_require__("./node_modules/react/index.js"),TextField=(__webpack_require__("./src/App.css"),__webpack_require__("./node_modules/@mui/material/TextField/TextField.js")),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Add=__webpack_require__("./node_modules/@mui/icons-material/Add.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const AddItemForm=react.memo((function(_ref){let{addItem,disabled=!1}=_ref;const{taskText,onKeyPressHandler,onChangeInput,error,callAddTask}=(onItemAdded=>{let[error,setError]=(0,react.useState)(null),[taskText,setTaskText]=(0,react.useState)("");const callAddTask=()=>{""!==taskText.trim()?(onItemAdded(taskText.trim()),setTaskText("")):setError("Title is required")};return{taskText,onKeyPressHandler:e=>{null!==error&&setError(null),"Enter"===e.code&&callAddTask()},onChangeInput:e=>{setTaskText(e.currentTarget.value)},error,callAddTask}})(addItem);return(0,jsx_runtime.jsxs)("div",{className:"add-task-wrapper",children:[(0,jsx_runtime.jsx)(TextField.Z,{type:"text",disabled,label:"Type value",variant:"standard",error:!!error,value:taskText,onChange:onChangeInput,onKeyDown:onKeyPressHandler,helperText:error}),(0,jsx_runtime.jsx)(IconButton.Z,{color:"info",onClick:callAddTask,disabled,children:(0,jsx_runtime.jsx)(Add.Z,{})})]})}));try{AddItemForm.displayName="AddItemForm",AddItemForm.__docgenInfo={description:"",displayName:"AddItemForm",props:{addItem:{defaultValue:null,description:"",name:"addItem",required:!0,type:{name:"(taskText: string) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddItemForm/AddItemForm.tsx#AddItemForm"]={docgenInfo:AddItemForm.__docgenInfo,name:"AddItemForm",path:"src/components/AddItemForm/AddItemForm.tsx#AddItemForm"})}catch(__react_docgen_typescript_loader_error){}},"./src/App.css":()=>{}}]);