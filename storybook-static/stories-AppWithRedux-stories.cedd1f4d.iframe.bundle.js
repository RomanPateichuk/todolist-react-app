"use strict";(self.webpackChunktodolist_app=self.webpackChunktodolist_app||[]).push([[961],{"./src/stories/AppWithRedux.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppWithReduxBaseExample:()=>AppWithReduxBaseExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AppWithRedux_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=(__webpack_require__("./src/App.css"),__webpack_require__("./node_modules/react-router/dist/index.js")),Grid=__webpack_require__("./node_modules/@mui/material/Grid/Grid.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),FormLabel=__webpack_require__("./node_modules/@mui/material/FormLabel/FormLabel.js"),FormGroup=__webpack_require__("./node_modules/@mui/material/FormGroup/FormGroup.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Login=()=>(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,alignItems:"center",justifyContent:"center",children:(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:4,children:(0,jsx_runtime.jsxs)(FormControl.Z,{children:[(0,jsx_runtime.jsx)(FormLabel.Z,{children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["To log in get registered ",(0,jsx_runtime.jsx)("a",{href:"https://social-network.samuraijs.com/signUp",children:"here"})]}),(0,jsx_runtime.jsxs)("p",{children:["or use common test account credentials:",(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:" Email: free@samuraijs.com"}),(0,jsx_runtime.jsx)("li",{children:"Password: free"})]})]})]})}),(0,jsx_runtime.jsxs)(FormGroup.Z,{children:[(0,jsx_runtime.jsx)(TextField.Z,{label:"Email",margin:"normal"}),(0,jsx_runtime.jsx)(TextField.Z,{label:"Password",margin:"normal"}),(0,jsx_runtime.jsx)(FormControlLabel.Z,{label:"Remember me",control:(0,jsx_runtime.jsx)(Checkbox.Z,{name:"rememberMe"})}),(0,jsx_runtime.jsx)(Button.Z,{type:"submit",variant:"contained",color:"primary",children:"Login"})]})]})})});var Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),AppBar=__webpack_require__("./node_modules/@mui/material/AppBar/AppBar.js"),Toolbar=__webpack_require__("./node_modules/@mui/material/Toolbar/Toolbar.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),Container=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),Menu=__webpack_require__("./node_modules/@mui/icons-material/Menu.js"),LinearProgress=__webpack_require__("./node_modules/@mui/material/LinearProgress/LinearProgress.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js");const Layout=()=>{const status=(0,es.v9)((state=>state.app.status));return(0,jsx_runtime.jsxs)("div",{className:"App",children:[(0,jsx_runtime.jsx)(Box.Z,{sx:{flexGrow:1},children:(0,jsx_runtime.jsxs)(AppBar.Z,{position:"static",children:[(0,jsx_runtime.jsxs)(Toolbar.Z,{children:[(0,jsx_runtime.jsx)(IconButton.Z,{size:"large",edge:"start",color:"inherit","aria-label":"menu",sx:{mr:2},children:(0,jsx_runtime.jsx)(Menu.Z,{})}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"h6",component:"div",sx:{flexGrow:1},children:"News"}),(0,jsx_runtime.jsx)(Button.Z,{color:"inherit",children:"Login"})]}),"loading"===status&&(0,jsx_runtime.jsx)(LinearProgress.Z,{color:"inherit"})]})}),(0,jsx_runtime.jsx)(Container.Z,{fixed:!0,children:(0,jsx_runtime.jsx)(dist.j3,{})})]})};var tasks_reducer=__webpack_require__("./src/store/tasks-reducer.ts"),todolists_reducer=__webpack_require__("./src/store/todolists-reducer.ts");var todolists_api=__webpack_require__("./src/api/todolists-api.ts"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js");const EditableSpan=react.memo((props=>{console.log("EditableSpan is called");const[editMode,setEditMode]=(0,react.useState)(!1),[value,setValue]=(0,react.useState)(props.title);return editMode?(0,jsx_runtime.jsxs)("div",{className:"add-task-wrapper",children:[(0,jsx_runtime.jsx)(TextField.Z,{autoFocus:!0,value,onChange:e=>{setValue(e.currentTarget.value)}}),(0,jsx_runtime.jsx)(Button.Z,{onClick:()=>{props.saveEdit(value),setEditMode(!1)},variant:"outlined",children:"save"})]}):(0,jsx_runtime.jsx)("span",{onDoubleClick:()=>{setEditMode(!0),setValue(props.title)},children:props.title})}));try{EditableSpan.displayName="EditableSpan",EditableSpan.__docgenInfo={description:"",displayName:"EditableSpan",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},saveEdit:{defaultValue:null,description:"",name:"saveEdit",required:!0,type:{name:"(newText: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/EditableSpan.tsx#EditableSpan"]={docgenInfo:EditableSpan.__docgenInfo,name:"EditableSpan",path:"src/components/common/EditableSpan.tsx#EditableSpan"})}catch(__react_docgen_typescript_loader_error){}var AddItemForm=__webpack_require__("./src/components/AddItemForm/AddItemForm.tsx"),Delete=__webpack_require__("./node_modules/@mui/icons-material/Delete.js");const Task=react.memo((props=>{const saveEditContainer=(0,react.useCallback)((newText=>{props.changeTaskTitle(newText,props.toDoListId,props.task.id)}),[props]);return(0,jsx_runtime.jsxs)("li",{className:props.task.status===todolists_api.Fm.Completed?"is-done":"",children:[(0,jsx_runtime.jsx)(Checkbox.Z,{checked:props.task.status===todolists_api.Fm.Completed,onChange:e=>{let newIsDoneValue=e.currentTarget.checked;props.changeStatus(props.task.id,newIsDoneValue?todolists_api.Fm.Completed:todolists_api.Fm.New,props.toDoListId)}}),(0,jsx_runtime.jsx)(EditableSpan,{title:props.task.title,saveEdit:saveEditContainer}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:()=>{props.removeTask(props.task.id,props.toDoListId)},"aria-label":"delete",size:"small",children:(0,jsx_runtime.jsx)(Delete.Z,{fontSize:"small"})})]},props.task.id)}));try{Task.displayName="Task",Task.__docgenInfo={description:"",displayName:"Task",props:{removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(id: string, todolistId: string) => void"}},changeStatus:{defaultValue:null,description:"",name:"changeStatus",required:!0,type:{name:"(id: string, status: TaskStatuses, todolistId: string) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string, taskId: string) => void"}},toDoListId:{defaultValue:null,description:"",name:"toDoListId",required:!0,type:{name:"string"}},task:{defaultValue:null,description:"",name:"task",required:!0,type:{name:"TaskType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Task.tsx#Task"]={docgenInfo:Task.__docgenInfo,name:"Task",path:"src/components/common/Task.tsx#Task"})}catch(__react_docgen_typescript_loader_error){}const Todolist=react.memo((function(props){const{title,tasks,filter,id,entityStatus,removeTask,changeFilter,addTask,changeStatus,removeTodolist,changeTaskTitle,changeTodoListTitle}=props;console.log("TodoList is called");const onAllClickHandler=(0,react.useCallback)((()=>changeFilter("all",id)),[changeFilter,id]),onActivecliCkHandler=(0,react.useCallback)((()=>changeFilter("active",id)),[changeFilter,id]),onCompletedClickHandler=(0,react.useCallback)((()=>changeFilter("completed",id)),[changeFilter,id]),onRemoveTodolist=(0,react.useCallback)((()=>removeTodolist(id)),[removeTodolist,id]),dispatch=(0,es.I0)();console.log("entityStatus",entityStatus),(0,react.useEffect)((()=>{dispatch((0,tasks_reducer.lB)(props.id))}),[]);const addTaskContainer=(0,react.useCallback)((title=>{addTask(title,id)}),[addTask,id]);return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("h3",{children:[(0,jsx_runtime.jsx)(EditableSpan,{title,saveEdit:newTitle=>{changeTodoListTitle(newTitle,id)}}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:onRemoveTodolist,disabled:"loading"===entityStatus,children:(0,jsx_runtime.jsx)(Delete.Z,{})})]}),(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTaskContainer,disabled:"loading"===entityStatus}),(0,jsx_runtime.jsx)("ul",{children:tasks.map((task=>(0,jsx_runtime.jsx)(Task,{toDoListId:id,task,removeTask,changeStatus,changeTaskTitle},task.id)))}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button.Z,{variant:"all"===filter?"contained":"text",onClick:onAllClickHandler,children:"All"}),(0,jsx_runtime.jsx)(Button.Z,{variant:"active"===filter?"contained":"text",onClick:onActivecliCkHandler,children:"A—Åtive"}),(0,jsx_runtime.jsx)(Button.Z,{variant:"completed"===filter?"contained":"text",onClick:onCompletedClickHandler,children:"Completed"})]})]})}));try{Todolist.displayName="Todolist",Todolist.__docgenInfo={description:"",displayName:"Todolist",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},tasks:{defaultValue:null,description:"",name:"tasks",required:!0,type:{name:"TaskType[]"}},filter:{defaultValue:null,description:"",name:"filter",required:!0,type:{name:"enum",value:[{value:'"all"'},{value:'"completed"'},{value:'"active"'}]}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},entityStatus:{defaultValue:null,description:"",name:"entityStatus",required:!0,type:{name:"enum",value:[{value:'"idle"'},{value:'"loading"'},{value:'"succeeded"'},{value:'"failed"'}]}},removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(id: string, todolistId: string) => void"}},changeFilter:{defaultValue:null,description:"",name:"changeFilter",required:!0,type:{name:"(value: FilterValuesType, todolistId: string) => void"}},addTask:{defaultValue:null,description:"",name:"addTask",required:!0,type:{name:"(taskText: string, todolistId: string) => void"}},changeStatus:{defaultValue:null,description:"",name:"changeStatus",required:!0,type:{name:"(id: string, status: TaskStatuses, todolistId: string) => void"}},removeTodolist:{defaultValue:null,description:"",name:"removeTodolist",required:!0,type:{name:"(id: string) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string, taskId: string) => void"}},changeTodoListTitle:{defaultValue:null,description:"",name:"changeTodoListTitle",required:!0,type:{name:"(newTitle: string, toDoListId: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Todolist.tsx#Todolist"]={docgenInfo:Todolist.__docgenInfo,name:"Todolist",path:"src/components/common/Todolist.tsx#Todolist"})}catch(__react_docgen_typescript_loader_error){}var Snackbar=__webpack_require__("./node_modules/@mui/material/Snackbar/Snackbar.js"),Alert=__webpack_require__("./node_modules/@mui/material/Alert/Alert.js"),app_reducer=__webpack_require__("./src/store/app-reducer.ts");function ErrorSnackBar(){const dispatch=(0,es.I0)(),error=(0,es.v9)((state=>state.app.error)),isOpen=null!==error;return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(Snackbar.Z,{open:isOpen,autoHideDuration:3e3,onClose:(event,reason)=>{"clickaway"!==reason&&dispatch((0,app_reducer.B1)(null))},children:(0,jsx_runtime.jsx)(Alert.Z,{severity:"error",children:error})})})}const Todolists=react.memo((()=>{const{todolists,tasks,removeTask,changeTaskTitle,changeTodoListTitle,addTodoList,removeTodoList,changeFilter,changeStatus,addTask}=(()=>{console.log("AppWithCustomHooks is called");const dispatch=(0,es.I0)(),todolists=(0,es.v9)((state=>state.todolists)),tasks=(0,es.v9)((state=>state.tasks));(0,react.useEffect)((()=>{dispatch((0,todolists_reducer.TH)())}),[]);const removeTask=(0,react.useCallback)(((id,todolistId)=>{const thunk=(0,tasks_reducer.Pi)(todolistId,id);dispatch(thunk)}),[dispatch]),addTask=(0,react.useCallback)(((taskText,todolistId)=>{const thunk=(0,tasks_reducer.rX)(todolistId,taskText);dispatch(thunk)}),[dispatch]),changeTaskTitle=(0,react.useCallback)(((newTitle,toDoListId,taskId)=>{dispatch((0,tasks_reducer.ms)(taskId,{title:newTitle},toDoListId))}),[dispatch]),changeStatus=(0,react.useCallback)(((id,status,todolistId)=>{dispatch((0,tasks_reducer.ms)(id,{status},todolistId))}),[dispatch]),changeFilter=(0,react.useCallback)(((value,todolistId)=>{dispatch((0,todolists_reducer.ug)(value,todolistId))}),[dispatch]),removeTodoList=(0,react.useCallback)((todolistId=>{dispatch((0,todolists_reducer.Ds)(todolistId))}),[dispatch]),addTodoList=(0,react.useCallback)((title=>{dispatch((0,todolists_reducer.MS)(title))}),[dispatch]);return{todolists,tasks,removeTask,changeTaskTitle,changeTodoListTitle:(0,react.useCallback)(((newTitle,toDoListId)=>{dispatch((0,todolists_reducer.Ot)(newTitle,toDoListId))}),[dispatch]),addTodoList,removeTodoList,changeFilter,changeStatus,addTask}})();return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,style:{padding:"2rem"},children:[(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTodoList}),(0,jsx_runtime.jsx)(ErrorSnackBar,{})]}),(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,spacing:3,children:todolists.map((tl=>{let allTodoListsTasks=tasks[tl.id],tasksForTodolist=allTodoListsTasks;return"completed"===tl.filter&&(tasksForTodolist=tasksForTodolist.filter((task=>task.status===todolists_api.Fm.Completed))),"active"===tl.filter&&(tasksForTodolist=tasksForTodolist.filter((task=>task.status===todolists_api.Fm.New))),"all"===tl.filter&&(tasksForTodolist=allTodoListsTasks),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,children:(0,jsx_runtime.jsx)(Paper.Z,{style:{padding:"1rem"},children:(0,jsx_runtime.jsx)(Todolist,{id:tl.id,title:tl.title,entityStatus:tl.entityStatus,tasks:tasksForTodolist,filter:tl.filter,removeTask,addTask,changeFilter,changeStatus,removeTodolist:removeTodoList,changeTaskTitle,changeTodoListTitle})})},tl.id)}))})]})}));try{Todolists.displayName="Todolists",Todolists.__docgenInfo={description:"",displayName:"Todolists",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Todolists.tsx#Todolists"]={docgenInfo:Todolists.__docgenInfo,name:"Todolists",path:"src/components/common/Todolists.tsx#Todolists"})}catch(__react_docgen_typescript_loader_error){}const AppWithRedux=react.memo((()=>(0,jsx_runtime.jsx)(dist.Z5,{children:(0,jsx_runtime.jsxs)(dist.AW,{path:"/",element:(0,jsx_runtime.jsx)(Layout,{}),children:[(0,jsx_runtime.jsx)(dist.AW,{index:!0,element:(0,jsx_runtime.jsx)(Todolists,{})}),(0,jsx_runtime.jsx)(dist.AW,{path:"login",element:(0,jsx_runtime.jsx)(Login,{})})]})})));try{AppWithRedux.displayName="AppWithRedux",AppWithRedux.__docgenInfo={description:"",displayName:"AppWithRedux",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AppWithRedux/AppWithRedux.tsx#AppWithRedux"]={docgenInfo:AppWithRedux.__docgenInfo,name:"AppWithRedux",path:"src/components/AppWithRedux/AppWithRedux.tsx#AppWithRedux"})}catch(__react_docgen_typescript_loader_error){}var _AppWithReduxBaseExam,_AppWithReduxBaseExam2,_AppWithReduxBaseExam3,store=__webpack_require__("./src/store/store.ts"),react_router_dom_dist=__webpack_require__("./node_modules/react-router-dom/dist/index.js");const AppWithRedux_stories={parameters:{storySource:{source:'import { AppWithRedux } from \'../components/AppWithRedux\';\nimport { store } from "../store/store";\nimport { Provider } from "react-redux";\nimport { BrowserRouter } from "react-router-dom";\n// import { ReduxStoreProviderDecorator } from \'./ReduxStoreProviderDecorator\'\nexport default {\n  title: \'AppWithRedux Component\',\n  component: AppWithRedux\n  // decorators: [ReduxStoreProviderDecorator]\n};\n\nexport const AppWithReduxBaseExample = () => {\n  return <>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <AppWithRedux />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </>;\n};\nAppWithReduxBaseExample.parameters = {\n  ...AppWithReduxBaseExample.parameters,\n  docs: {\n    ...AppWithReduxBaseExample.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <>\\r\\n    <Provider store={store}>\\r\\n      <BrowserRouter>\\r\\n        <AppWithRedux />\\r\\n      </BrowserRouter>\\r\\n    </Provider>\\r\\n  </>;\\n}",\n      ...AppWithReduxBaseExample.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{"app-with-redux-base-example":{startLoc:{col:39,line:12},endLoc:{col:1,line:20},startBody:{col:39,line:12},endBody:{col:1,line:20}}}}},title:"AppWithRedux Component",component:AppWithRedux},AppWithReduxBaseExample=()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(es.zt,{store:store.h,children:(0,jsx_runtime.jsx)(react_router_dom_dist.VK,{children:(0,jsx_runtime.jsx)(AppWithRedux,{})})})});AppWithReduxBaseExample.parameters={...AppWithReduxBaseExample.parameters,docs:{...null===(_AppWithReduxBaseExam=AppWithReduxBaseExample.parameters)||void 0===_AppWithReduxBaseExam?void 0:_AppWithReduxBaseExam.docs,source:{originalSource:"() => {\n  return <>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <AppWithRedux />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </>;\n}",...null===(_AppWithReduxBaseExam2=AppWithReduxBaseExample.parameters)||void 0===_AppWithReduxBaseExam2||null===(_AppWithReduxBaseExam3=_AppWithReduxBaseExam2.docs)||void 0===_AppWithReduxBaseExam3?void 0:_AppWithReduxBaseExam3.source}}};const __namedExportsOrder=["AppWithReduxBaseExample"]},"./src/api/todolists-api.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Fm:()=>TaskStatuses,fs:()=>todolistsApi});const instance=__webpack_require__("./node_modules/axios/lib/axios.js").Z.create({withCredentials:!0,baseURL:"https://social-network.samuraijs.com/api/1.1/",headers:{"API-KEY":"a04742fc-b015-48d6-8ae1-43c8264c6140"}}),todolistsApi={getTodolists:()=>instance.get("todo-lists"),createTodolist:titleValue=>instance.post("todo-lists",{title:titleValue}),deleteTodolist:uri=>instance.delete("todo-lists/".concat(uri)),updateTodolist:(uri,title)=>instance.put("todo-lists/".concat(uri),{title}),getTasks:todolistId=>instance.get("todo-lists/".concat(todolistId,"/tasks")),createTask:(todolistId,title)=>instance.post("todo-lists/".concat(todolistId,"/tasks"),{title}),deleteTask:(todolistId,taskId)=>instance.delete("/todo-lists/".concat(todolistId,"/tasks/").concat(taskId)),updateTask:(toDoListId,taskId,model)=>instance.put("/todo-lists/".concat(toDoListId,"/tasks/").concat(taskId),model)};let TaskStatuses=function(TaskStatuses){return TaskStatuses[TaskStatuses.New=0]="New",TaskStatuses[TaskStatuses.InProgress=1]="InProgress",TaskStatuses[TaskStatuses.Completed=2]="Completed",TaskStatuses[TaskStatuses.Draft=3]="Draft",TaskStatuses}({})},"./src/components/AddItemForm/AddItemForm.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>AddItemForm});var react=__webpack_require__("./node_modules/react/index.js"),TextField=(__webpack_require__("./src/App.css"),__webpack_require__("./node_modules/@mui/material/TextField/TextField.js")),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Add=__webpack_require__("./node_modules/@mui/icons-material/Add.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const AddItemForm=react.memo((function(_ref){let{addItem,disabled=!1}=_ref;const{taskText,onKeyPressHandler,onChangeInput,error,callAddTask}=(onItemAdded=>{let[error,setError]=(0,react.useState)(null),[taskText,setTaskText]=(0,react.useState)("");const callAddTask=()=>{""!==taskText.trim()?(onItemAdded(taskText.trim()),setTaskText("")):setError("Title is required")};return{taskText,onKeyPressHandler:e=>{null!==error&&setError(null),"Enter"===e.code&&callAddTask()},onChangeInput:e=>{setTaskText(e.currentTarget.value)},error,callAddTask}})(addItem);return(0,jsx_runtime.jsxs)("div",{className:"add-task-wrapper",children:[(0,jsx_runtime.jsx)(TextField.Z,{type:"text",disabled,label:"Type value",variant:"standard",error:!!error,value:taskText,onChange:onChangeInput,onKeyDown:onKeyPressHandler,helperText:error}),(0,jsx_runtime.jsx)(IconButton.Z,{color:"info",onClick:callAddTask,disabled,children:(0,jsx_runtime.jsx)(Add.Z,{})})]})}));try{AddItemForm.displayName="AddItemForm",AddItemForm.__docgenInfo={description:"",displayName:"AddItemForm",props:{addItem:{defaultValue:null,description:"",name:"addItem",required:!0,type:{name:"(taskText: string) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddItemForm/AddItemForm.tsx#AddItemForm"]={docgenInfo:AddItemForm.__docgenInfo,name:"AddItemForm",path:"src/components/AddItemForm/AddItemForm.tsx#AddItemForm"})}catch(__react_docgen_typescript_loader_error){}},"./src/store/app-reducer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B1:()=>setAppErrorAC,m5:()=>appReducer,nw:()=>setAppStatusAC});const appReducer=function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"APP/SET-STATUS":return{...state,status:action.status};case"APP/SET-ERROR":return{...state,error:action.error};default:return{...state}}},setAppStatusAC=status=>({type:"APP/SET-STATUS",status}),setAppErrorAC=error=>({type:"APP/SET-ERROR",error}),initialState={status:"idle",error:null}},"./src/store/store.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>store});var redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/redux/es/redux.js"),_tasks_reducer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/store/tasks-reducer.ts"),_todolists_reducer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/store/todolists-reducer.ts"),redux_thunk__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/redux-thunk/dist/redux-thunk.mjs"),_app_reducer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/store/app-reducer.ts");const rootReducer=(0,redux__WEBPACK_IMPORTED_MODULE_3__.UY)({tasks:_tasks_reducer__WEBPACK_IMPORTED_MODULE_0__.fR,todolists:_todolists_reducer__WEBPACK_IMPORTED_MODULE_1__.pS,app:_app_reducer__WEBPACK_IMPORTED_MODULE_2__.m5}),store=(0,redux__WEBPACK_IMPORTED_MODULE_3__.MT)(rootReducer,(0,redux__WEBPACK_IMPORTED_MODULE_3__.md)(redux_thunk__WEBPACK_IMPORTED_MODULE_4__.I));window.store=store},"./src/store/tasks-reducer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{rX:()=>addTaskTC,lB:()=>fetchTasksTC,Pi:()=>removeTaskTC,fR:()=>tasksReducer,ms:()=>updateTaskTC});var todolists_api=__webpack_require__("./src/api/todolists-api.ts"),app_reducer=__webpack_require__("./src/store/app-reducer.ts");const handleServerAppError=(data,dispatch)=>{data.messages.length?dispatch((0,app_reducer.B1)(data.messages[0])):dispatch((0,app_reducer.B1)("Some error occurred")),dispatch((0,app_reducer.nw)("failed"))},handleServerNetworkAppError=(error,dispatch)=>{dispatch((0,app_reducer.B1)(error.message?error.message:"Some error occurred")),dispatch((0,app_reducer.nw)("failed"))},initialState={},tasksReducer=function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"REMOVE-TASK":return{...state,[action.toDoListId]:state[action.toDoListId].filter((task=>task.id!==action.taskId))};case"ADD-TASK":return{...state,[action.task.todoListId]:[action.task,...state[action.task.todoListId]]};case"UPDATE-TASK":return{...state,[action.todolistId]:state[action.todolistId].map((task=>task.id===action.taskId?{...task,...action.model}:task))};case"ADD-TODOLIST":return{...state,[action.todolist.id]:[]};case"REMOVE-TODOLIST":const stateCopy={...state};return delete stateCopy[action.id],stateCopy;case"SET-TODOLISTS":{const copyState={...state};return action.todolists.forEach((tl=>{copyState[tl.id]=[]})),copyState}case"SET-TASKS":return{...state,[action.todolistId]:action.tasks};default:return state}},fetchTasksTC=todolistId=>dispatch=>{dispatch((0,app_reducer.nw)("loading")),todolists_api.fs.getTasks(todolistId).then((res=>{dispatch(((todolistId,tasks)=>({type:"SET-TASKS",tasks,todolistId}))(todolistId,res.data.items)),dispatch((0,app_reducer.nw)("succeeded"))}))},removeTaskTC=(todolistId,id)=>dispatch=>{todolists_api.fs.deleteTask(todolistId,id).then((res=>{dispatch({type:"REMOVE-TASK",taskId:id,toDoListId:todolistId})}))},addTaskTC=(todolistId,title)=>dispatch=>{dispatch((0,app_reducer.nw)("loading")),todolists_api.fs.createTask(todolistId,title).then((res=>{0===res.data.resultCode?(dispatch({type:"ADD-TASK",task:res.data.data.item}),dispatch((0,app_reducer.nw)("succeeded"))):handleServerAppError(res.data,dispatch)})).catch((error=>{handleServerNetworkAppError(error,dispatch)}))},updateTaskTC=(taskId,domainModel,todolistId)=>(dispatch,getState)=>{const task=getState().tasks[todolistId].find((t=>t.id===taskId));if(!task)return void dispatch((0,app_reducer.B1)("task not found in the state"));const apiModel={deadline:task.deadline,description:task.description,priority:task.priority,startDate:task.startDate,title:task.title,status:task.status,...domainModel};todolists_api.fs.updateTask(todolistId,taskId,apiModel).then((res=>{0===res.data.resultCode?dispatch(((taskId,model,todolistId)=>({type:"UPDATE-TASK",taskId,model,todolistId}))(taskId,domainModel,todolistId)):handleServerAppError(res.data,dispatch)})).catch((error=>{handleServerNetworkAppError(error,dispatch)}))}},"./src/store/todolists-reducer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ds:()=>removeTodolistTC,MS:()=>addTodolistTC,Ot:()=>changeTodolistTitleTC,TH:()=>fetchTodolistsTC,pS:()=>todoListsReducer,ug:()=>changeTodoLisFilterAC});var _api_todolists_api__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/api/todolists-api.ts"),_app_reducer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/store/app-reducer.ts");const initialState=[],todoListsReducer=function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"ADD-TODOLIST":return[{...action.todolist,filter:"all",entityStatus:"idle"},...state];case"REMOVE-TODOLIST":return state.filter((e=>e.id!==action.id));case"CHANGE-TODOLIST-TITLE":return state.map((tl=>tl.id===action.id?{...tl,title:action.title}:tl));case"CHANGE-TODOLIST-FILTER":return state.map((tl=>tl.id===action.id?{...tl,filter:action.filter}:tl));case"SET-TODOLISTS":return action.todolists.map((tl=>({...tl,filter:"all",entityStatus:"idle"})));case"CHANGE-TODOLIST-STATUS":return state.map((tl=>tl.id===action.id?{...tl,entityStatus:action.status}:tl));default:return state}},changeTodoLisFilterAC=(filter,id)=>({type:"CHANGE-TODOLIST-FILTER",filter,id}),fetchTodolistsTC=()=>dispatch=>{dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("loading")),_api_todolists_api__WEBPACK_IMPORTED_MODULE_0__.fs.getTodolists().then((res=>{dispatch({type:"SET-TODOLISTS",todolists:res.data}),dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("succeeded"))}))},removeTodolistTC=todolistId=>dispatch=>{dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("loading")),dispatch({type:"CHANGE-TODOLIST-STATUS",id:todolistId,status:"loading"}),_api_todolists_api__WEBPACK_IMPORTED_MODULE_0__.fs.deleteTodolist(todolistId).then((res=>{dispatch((todolistId=>({type:"REMOVE-TODOLIST",id:todolistId}))(todolistId)),dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("succeeded"))}))},addTodolistTC=title=>dispatch=>{dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("loading")),_api_todolists_api__WEBPACK_IMPORTED_MODULE_0__.fs.createTodolist(title).then((res=>{dispatch({type:"ADD-TODOLIST",todolist:res.data.data.item}),dispatch((0,_app_reducer__WEBPACK_IMPORTED_MODULE_1__.nw)("succeeded"))}))},changeTodolistTitleTC=(title,id)=>dispatch=>{_api_todolists_api__WEBPACK_IMPORTED_MODULE_0__.fs.updateTodolist(id,title).then((res=>{dispatch(((title,id)=>({type:"CHANGE-TODOLIST-TITLE",title,id}))(title,id))}))}},"./src/App.css":()=>{}}]);